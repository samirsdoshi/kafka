buildscript {
	ext {
		baseName="demoprocessor"
		springBootVersion = '2.6.7'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.github.pivotalservices:ya-cf-app-gradle-plugin:2.2.0')
		classpath('com.commercehub.gradle.plugin:gradle-avro-plugin:0.19.0')
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'pmd'
	id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.commercehub.gradle.plugin.avro'
apply plugin: 'com.commercehub.gradle.plugin.avro-base'

group = 'com.example'
version = '0.0.3-SNAPSHOT'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://packages.confluent.io/maven/"}
	maven { url "https://plugins.gradle.org/m2/" }
}


dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//implementation 'org.springframework.kafka:spring-kafka'

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'

	implementation 'io.confluent:kafka-avro-serializer:5.3.2'
	implementation("org.apache.avro:avro-compiler:1.9.2")
	implementation("org.apache.avro:avro:1.9.2")
	implementation 'io.confluent:kafka-streams-avro-serde:7.0.1'

	compileOnly "org.projectlombok:lombok:1.18.8"
	annotationProcessor "org.projectlombok:lombok:1.18.8"
	implementation "com.google.code.gson:gson"
	// https://mvnrepository.com/artifact/io.confluent/kafka-schema-registry-client
	implementation group: 'io.confluent', name: 'kafka-schema-registry-client', version: '7.2.1'

	// https://mvnrepository.com/artifact/io.confluent/kafka-serde-tools-package
	implementation group: 'io.confluent', name: 'kafka-serde-tools-package', version: '6.0.2', ext: 'pom'
	compile 'io.github.resilience4j:resilience4j-spring-boot2:1.7.0'
	compile('org.springframework.boot:spring-boot-starter-aop')

	testCompile('org.springframework.boot:spring-boot-starter-test')

}


def copyFile(srcFile, targetFile){
	println "Copying.. $srcFile $targetFile"
	def srcStream = new File(srcFile).newDataInputStream()
	def dstStream = new File(targetFile).newDataOutputStream()
	dstStream << srcStream
	srcStream.close()
	dstStream.close()
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.0"
	}
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("${project.buildDir}/generated")
}
avro {
	createSetters = true
}
compileJava.source(generateAvro.outputs)

sourceSets {
	main {
		java {
			srcDir "${project.buildDir}/generated"
		}
	}
}
